// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.20.0
// 	protoc        v3.11.4
// source: xbrl/v1/taxonomy.proto

package v1

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TypeStorage int32

const (
	// number/numeric value
	TypeStorage_NUMERIC TypeStorage = 0
	// string
	TypeStorage_TEXT TypeStorage = 1
	// date
	TypeStorage_DATE TypeStorage = 2
	// true/false
	TypeStorage_BOOL TypeStorage = 4
	// choice
	TypeStorage_ENUM TypeStorage = 5
)

// Enum value maps for TypeStorage.
var (
	TypeStorage_name = map[int32]string{
		0: "NUMERIC",
		1: "TEXT",
		2: "DATE",
		4: "BOOL",
		5: "ENUM",
	}
	TypeStorage_value = map[string]int32{
		"NUMERIC": 0,
		"TEXT":    1,
		"DATE":    2,
		"BOOL":    4,
		"ENUM":    5,
	}
)

func (x TypeStorage) Enum() *TypeStorage {
	p := new(TypeStorage)
	*p = x
	return p
}

func (x TypeStorage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TypeStorage) Descriptor() protoreflect.EnumDescriptor {
	return file_xbrl_v1_taxonomy_proto_enumTypes[0].Descriptor()
}

func (TypeStorage) Type() protoreflect.EnumType {
	return &file_xbrl_v1_taxonomy_proto_enumTypes[0]
}

func (x TypeStorage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TypeStorage.Descriptor instead.
func (TypeStorage) EnumDescriptor() ([]byte, []int) {
	return file_xbrl_v1_taxonomy_proto_rawDescGZIP(), []int{0}
}

type PeriodType int32

const (
	PeriodType_DURATION PeriodType = 0
	PeriodType_INSTANT  PeriodType = 1
)

// Enum value maps for PeriodType.
var (
	PeriodType_name = map[int32]string{
		0: "DURATION",
		1: "INSTANT",
	}
	PeriodType_value = map[string]int32{
		"DURATION": 0,
		"INSTANT":  1,
	}
)

func (x PeriodType) Enum() *PeriodType {
	p := new(PeriodType)
	*p = x
	return p
}

func (x PeriodType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PeriodType) Descriptor() protoreflect.EnumDescriptor {
	return file_xbrl_v1_taxonomy_proto_enumTypes[1].Descriptor()
}

func (PeriodType) Type() protoreflect.EnumType {
	return &file_xbrl_v1_taxonomy_proto_enumTypes[1]
}

func (x PeriodType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PeriodType.Descriptor instead.
func (PeriodType) EnumDescriptor() ([]byte, []int) {
	return file_xbrl_v1_taxonomy_proto_rawDescGZIP(), []int{1}
}

type Balance int32

const (
	Balance_DEBIT  Balance = 0
	Balance_CREDIT Balance = 1
)

// Enum value maps for Balance.
var (
	Balance_name = map[int32]string{
		0: "DEBIT",
		1: "CREDIT",
	}
	Balance_value = map[string]int32{
		"DEBIT":  0,
		"CREDIT": 1,
	}
)

func (x Balance) Enum() *Balance {
	p := new(Balance)
	*p = x
	return p
}

func (x Balance) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Balance) Descriptor() protoreflect.EnumDescriptor {
	return file_xbrl_v1_taxonomy_proto_enumTypes[2].Descriptor()
}

func (Balance) Type() protoreflect.EnumType {
	return &file_xbrl_v1_taxonomy_proto_enumTypes[2]
}

func (x Balance) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Balance.Descriptor instead.
func (Balance) EnumDescriptor() ([]byte, []int) {
	return file_xbrl_v1_taxonomy_proto_rawDescGZIP(), []int{2}
}

type Taxonomy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaxonomyId int32  `protobuf:"varint,1,opt,name=taxonomy_id,json=taxonomyId,proto3" json:"taxonomy_id,omitempty"`
	Namespace  string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Prefix     string `protobuf:"bytes,3,opt,name=prefix,proto3" json:"prefix,omitempty"`
}

func (x *Taxonomy) Reset() {
	*x = Taxonomy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xbrl_v1_taxonomy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Taxonomy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Taxonomy) ProtoMessage() {}

func (x *Taxonomy) ProtoReflect() protoreflect.Message {
	mi := &file_xbrl_v1_taxonomy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Taxonomy.ProtoReflect.Descriptor instead.
func (*Taxonomy) Descriptor() ([]byte, []int) {
	return file_xbrl_v1_taxonomy_proto_rawDescGZIP(), []int{0}
}

func (x *Taxonomy) GetTaxonomyId() int32 {
	if x != nil {
		return x.TaxonomyId
	}
	return 0
}

func (x *Taxonomy) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Taxonomy) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

type Type struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId       int32  `protobuf:"varint,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	ParentTypeId int32  `protobuf:"varint,2,opt,name=parent_type_id,json=parentTypeId,proto3" json:"parent_type_id,omitempty"`
	TaxonomyId   int32  `protobuf:"varint,3,opt,name=taxonomy_id,json=taxonomyId,proto3" json:"taxonomy_id,omitempty"`
	Name         string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Type) Reset() {
	*x = Type{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xbrl_v1_taxonomy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type) ProtoMessage() {}

func (x *Type) ProtoReflect() protoreflect.Message {
	mi := &file_xbrl_v1_taxonomy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type.ProtoReflect.Descriptor instead.
func (*Type) Descriptor() ([]byte, []int) {
	return file_xbrl_v1_taxonomy_proto_rawDescGZIP(), []int{1}
}

func (x *Type) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *Type) GetParentTypeId() int32 {
	if x != nil {
		return x.ParentTypeId
	}
	return 0
}

func (x *Type) GetTaxonomyId() int32 {
	if x != nil {
		return x.TaxonomyId
	}
	return 0
}

func (x *Type) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Enum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnumId int32  `protobuf:"varint,1,opt,name=enum_id,json=enumId,proto3" json:"enum_id,omitempty"`
	TypeId int32  `protobuf:"varint,2,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Value  string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Enum) Reset() {
	*x = Enum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xbrl_v1_taxonomy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Enum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Enum) ProtoMessage() {}

func (x *Enum) ProtoReflect() protoreflect.Message {
	mi := &file_xbrl_v1_taxonomy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Enum.ProtoReflect.Descriptor instead.
func (*Enum) Descriptor() ([]byte, []int) {
	return file_xbrl_v1_taxonomy_proto_rawDescGZIP(), []int{2}
}

func (x *Enum) GetEnumId() int32 {
	if x != nil {
		return x.EnumId
	}
	return 0
}

func (x *Enum) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *Enum) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Concept struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConceptId  int32      `protobuf:"varint,1,opt,name=concept_id,json=conceptId,proto3" json:"concept_id,omitempty"`
	TaxonomyId int32      `protobuf:"varint,2,opt,name=taxonomy_id,json=taxonomyId,proto3" json:"taxonomy_id,omitempty"`
	TypeId     int32      `protobuf:"varint,3,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Name       string     `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	PeriodType PeriodType `protobuf:"varint,5,opt,name=period_type,json=periodType,proto3,enum=asdf.xbrl.v1.PeriodType" json:"period_type,omitempty"`
	Balance    Balance    `protobuf:"varint,6,opt,name=balance,proto3,enum=asdf.xbrl.v1.Balance" json:"balance,omitempty"`
	IsAbstract bool       `protobuf:"varint,7,opt,name=is_abstract,json=isAbstract,proto3" json:"is_abstract,omitempty"`
}

func (x *Concept) Reset() {
	*x = Concept{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xbrl_v1_taxonomy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Concept) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Concept) ProtoMessage() {}

func (x *Concept) ProtoReflect() protoreflect.Message {
	mi := &file_xbrl_v1_taxonomy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Concept.ProtoReflect.Descriptor instead.
func (*Concept) Descriptor() ([]byte, []int) {
	return file_xbrl_v1_taxonomy_proto_rawDescGZIP(), []int{3}
}

func (x *Concept) GetConceptId() int32 {
	if x != nil {
		return x.ConceptId
	}
	return 0
}

func (x *Concept) GetTaxonomyId() int32 {
	if x != nil {
		return x.TaxonomyId
	}
	return 0
}

func (x *Concept) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *Concept) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Concept) GetPeriodType() PeriodType {
	if x != nil {
		return x.PeriodType
	}
	return PeriodType_DURATION
}

func (x *Concept) GetBalance() Balance {
	if x != nil {
		return x.Balance
	}
	return Balance_DEBIT
}

func (x *Concept) GetIsAbstract() bool {
	if x != nil {
		return x.IsAbstract
	}
	return false
}

type ConceptLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelId   int32  `protobuf:"varint,1,opt,name=label_id,json=labelId,proto3" json:"label_id,omitempty"`
	ConceptId int32  `protobuf:"varint,2,opt,name=concept_id,json=conceptId,proto3" json:"concept_id,omitempty"`
	Lang      string `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang,omitempty"`
	Role      string `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	Text      string `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *ConceptLabel) Reset() {
	*x = ConceptLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xbrl_v1_taxonomy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConceptLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConceptLabel) ProtoMessage() {}

func (x *ConceptLabel) ProtoReflect() protoreflect.Message {
	mi := &file_xbrl_v1_taxonomy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConceptLabel.ProtoReflect.Descriptor instead.
func (*ConceptLabel) Descriptor() ([]byte, []int) {
	return file_xbrl_v1_taxonomy_proto_rawDescGZIP(), []int{4}
}

func (x *ConceptLabel) GetLabelId() int32 {
	if x != nil {
		return x.LabelId
	}
	return 0
}

func (x *ConceptLabel) GetConceptId() int32 {
	if x != nil {
		return x.ConceptId
	}
	return 0
}

func (x *ConceptLabel) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *ConceptLabel) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *ConceptLabel) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

var File_xbrl_v1_taxonomy_proto protoreflect.FileDescriptor

var file_xbrl_v1_taxonomy_proto_rawDesc = []byte{
	0x0a, 0x16, 0x78, 0x62, 0x72, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x73, 0x64, 0x66, 0x2e, 0x78,
	0x62, 0x72, 0x6c, 0x2e, 0x76, 0x31, 0x22, 0x61, 0x0a, 0x08, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x7a, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x17, 0x0a,
	0x07, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x65, 0x6e, 0x75, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x83, 0x02, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39,
	0x0a, 0x0b, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x73, 0x64, 0x66, 0x2e, 0x78, 0x62, 0x72, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x61, 0x73, 0x64,
	0x66, 0x2e, 0x78, 0x62, 0x72, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x61, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x69, 0x73, 0x41, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x0c,
	0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x08,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x63, 0x65,
	0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x63, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x2a, 0x42, 0x0a, 0x0b, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x55, 0x4d, 0x45, 0x52, 0x49, 0x43, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x54, 0x45, 0x58, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x41, 0x54, 0x45,
	0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04,
	0x45, 0x4e, 0x55, 0x4d, 0x10, 0x05, 0x2a, 0x27, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x54, 0x10, 0x01, 0x2a,
	0x20, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x45,
	0x42, 0x49, 0x54, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x10,
	0x01, 0x42, 0x1f, 0x5a, 0x1d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x68, 0x72, 0x6f, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x78, 0x62, 0x72, 0x6c, 0x2f,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_xbrl_v1_taxonomy_proto_rawDescOnce sync.Once
	file_xbrl_v1_taxonomy_proto_rawDescData = file_xbrl_v1_taxonomy_proto_rawDesc
)

func file_xbrl_v1_taxonomy_proto_rawDescGZIP() []byte {
	file_xbrl_v1_taxonomy_proto_rawDescOnce.Do(func() {
		file_xbrl_v1_taxonomy_proto_rawDescData = protoimpl.X.CompressGZIP(file_xbrl_v1_taxonomy_proto_rawDescData)
	})
	return file_xbrl_v1_taxonomy_proto_rawDescData
}

var file_xbrl_v1_taxonomy_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_xbrl_v1_taxonomy_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_xbrl_v1_taxonomy_proto_goTypes = []interface{}{
	(TypeStorage)(0),     // 0: asdf.xbrl.v1.TypeStorage
	(PeriodType)(0),      // 1: asdf.xbrl.v1.PeriodType
	(Balance)(0),         // 2: asdf.xbrl.v1.Balance
	(*Taxonomy)(nil),     // 3: asdf.xbrl.v1.Taxonomy
	(*Type)(nil),         // 4: asdf.xbrl.v1.Type
	(*Enum)(nil),         // 5: asdf.xbrl.v1.Enum
	(*Concept)(nil),      // 6: asdf.xbrl.v1.Concept
	(*ConceptLabel)(nil), // 7: asdf.xbrl.v1.ConceptLabel
}
var file_xbrl_v1_taxonomy_proto_depIdxs = []int32{
	1, // 0: asdf.xbrl.v1.Concept.period_type:type_name -> asdf.xbrl.v1.PeriodType
	2, // 1: asdf.xbrl.v1.Concept.balance:type_name -> asdf.xbrl.v1.Balance
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_xbrl_v1_taxonomy_proto_init() }
func file_xbrl_v1_taxonomy_proto_init() {
	if File_xbrl_v1_taxonomy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_xbrl_v1_taxonomy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Taxonomy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xbrl_v1_taxonomy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xbrl_v1_taxonomy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Enum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xbrl_v1_taxonomy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Concept); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xbrl_v1_taxonomy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConceptLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_xbrl_v1_taxonomy_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_xbrl_v1_taxonomy_proto_goTypes,
		DependencyIndexes: file_xbrl_v1_taxonomy_proto_depIdxs,
		EnumInfos:         file_xbrl_v1_taxonomy_proto_enumTypes,
		MessageInfos:      file_xbrl_v1_taxonomy_proto_msgTypes,
	}.Build()
	File_xbrl_v1_taxonomy_proto = out.File
	file_xbrl_v1_taxonomy_proto_rawDesc = nil
	file_xbrl_v1_taxonomy_proto_goTypes = nil
	file_xbrl_v1_taxonomy_proto_depIdxs = nil
}
